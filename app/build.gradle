apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: "jacoco.gradle"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.app.android"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }

    def APP_NAME = "Base Project"

    signingConfigs {
        debug {
            storeFile file('../keystores/debug.jks')
        }

        release {
            if (!System.getenv('CI')) {
                storeFile file("../keystores/release.jks")
                storePassword ""
                keyAlias ""
                keyPassword ""
            }
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
        xmlOutput file("${buildDir}/reports/lint-results.xml")
    }

    buildTypes {
        release {
            resValue("string", "app_name", "${APP_NAME}")
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
            resValue("string", "app_name", "[DEV]${APP_NAME}")
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
    }

    android.applicationVariants.all { variant ->
        switch (variant.getName()) {
            case "release":
                // TODO: TBD
                variant.buildConfigField "String", "API_URL", '"https://"'
                break
            case "debug":
                // TODO: TBD
                variant.buildConfigField "String", "API_URL", '"http://dev-alb-2057093704.ap-northeast-1.elb.amazonaws.com/API/"'
                break
        }
        variant.outputs.all {
            outputFileName = "${applicationId}_v${variant.versionName}_${variant.versionCode}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin and data binding version
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    kapt "com.android.databinding:compiler:$gradle_version"

    //App support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    //Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //Pref
    implementation "com.chibatching.kotpref:kotpref:2.2.0"

    //Image loader
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    kapt 'com.github.bumptech.glide:compiler:4.3.1'

    //Api
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //Room
    implementation "android.arch.persistence.room:runtime:1.0.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    //ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:1.1.0"
    //Java8 support for Lifecycles
    implementation "android.arch.lifecycle:common-java8:1.1.0"

    //RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:1.0.0"

    //ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:1.1.0"

    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation "org.jetbrains.anko:anko-recyclerview-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$anko_version"

    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-design-coroutines:$anko_version"

    //Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    testImplementation 'org.mockito:mockito-inline:2.11.0'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'

    testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.1'

    testImplementation "org.robolectric:robolectric:3.6.1"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
